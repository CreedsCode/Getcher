"use client";
import { Field, Form, Formik } from "formik";
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";

interface Values {
  username: string;
  password: string;
}

const Home: NextPage = () => {
  const [file, setFile] = useState<File | null>(null);

  const handleSubmit = (values: Values) => {
    const apiSecret = JSON.stringify(
      Buffer.from(values.username + ":" + values.password).toString("base64")
    );
    localStorage.setItem("secret", apiSecret);
  };

  const handleFileChange = (e: any) => {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    const target = e.target as HTMLInputElement;

    if (!target.files) {
      return;
    }

    if (target.files.length) {
      return;
    }

    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    const inputFile = target.files[0];
    if (inputFile) {
      const fileExtension =
        inputFile.name.split(".")[inputFile?.name.split(".").length - 1];
      console.log(fileExtension);

      if (fileExtension !== "csv") {
        console.log(fileExtension, "no ");

        return;
      }
      console.log("Setting input");

      setFile(inputFile);
    }
  };

  return (
    <>
      <Head>
        <title>Getcher</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-[hsl(204,100%,70%)] sm:text-[5rem]">
            G<span className="text-[hsl(280,100%,70%)]">etcher</span>
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <div className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
              <h3 className="text-2xl font-bold">Setup</h3>
              <div className="text-lg">
                <Formik
                  initialValues={{
                    username: "",
                    password: "",
                  }}
                  onSubmit={handleSubmit}
                >
                  <Form>
                    <label className="text-lg" htmlFor="username">
                      Username
                    </label>
                    <Field
                      className="w-full rounded bg-white/10 p-1 text-white"
                      id="username"
                      name="username"
                    />

                    <label className="text-lg" htmlFor="password">
                      Password
                    </label>
                    <Field
                      className="w-full rounded bg-white/10 p-1 text-white"
                      id="password"
                      name="password"
                      type="password"
                    />
                    <button
                      className="dark:focus my-1 w-full rounded-lg bg-white/10  px-5 py-2.5 text-center text-sm  text-white  dark:bg-[hsl(280,100%,70%)]  sm:w-auto"
                      type="submit"
                    >
                      Update
                    </button>
                    {/* {localStorage.getItem("secret") ? (
                      <button
                        className="dark:focus my-1 w-full rounded-lg bg-white/10  px-5 py-2.5 text-center text-sm  text-white  dark:bg-[hsl(280,100%,70%)]  sm:w-auto"
                        type="submit"
                      >
                        Update
                      </button>
                    ) : (
                      <button
                        className="dark:focus my-1 w-full rounded-lg bg-white/10  px-5 py-2.5 text-center text-sm  text-white  dark:bg-[hsl(280,100%,70%)]  sm:w-auto"
                        type="submit"
                      >
                        Save
                      </button>
                    )} */}
                  </Form>
                </Formik>
              </div>
            </div>
            <div>
              <div className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
                <div>
                  <h3 className="inline-block text-2xl font-bold">Upload</h3>
                  <p className="float-right inline-block italic">Select File</p>
                  {/* <p className="text-2xl font-bold">Select Column</p> */}
                  {/* <p className="text-2xl font-bold">Processing</p> */}
                  {/* <p className="text-2xl font-bold">Download Results</p> */}
                </div>
                <div className="relative border border-dashed">
                  <input
                    type="file"
                    name="file"
                    onChange={handleFileChange}
                    className="relative z-50 block h-full w-full cursor-pointer p-20 opacity-0"
                  />
                  <div className="absolute top-0 right-0 left-0 m-auto p-10 text-center">
                    <h4>
                      Drop file to upload <br />
                      or
                    </h4>
                    {file ? (
                      <p className="">{file.name} asd</p>
                    ) : (
                      <p className="">Select File a</p>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
